# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class CallSettings(UniversalBaseModel):
    max_call_duration: typing.Optional[int] = pydantic.Field(default=None)
    """
    Maximum call duration in minutes (2-30)
    """

    silence_timeout: typing.Optional[int] = pydantic.Field(default=None)
    """
    Silence timeout in seconds (5-45)
    """

    silence_timeout_max_retries: typing.Optional[int] = pydantic.Field(default=None)
    """
    Maximum retries for silence timeout (1-5)
    """

    silence_timeout_message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Message to play when silence timeout occurs
    """

    call_recording_enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to record calls
    """

    voicemail_detection_enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to detect voicemail
    """

    hipaa_compliance_enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether HIPAA compliance is enabled
    """

    pci_compliance_enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether PCI compliance is enabled
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
