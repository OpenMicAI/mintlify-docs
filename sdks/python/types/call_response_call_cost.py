# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class CallResponseCallCost(UniversalBaseModel):
    """
    Detailed cost breakdown for the call
    """

    total_cost: typing.Optional[float] = pydantic.Field(default=None)
    """
    Total cost of the call in USD
    """

    llm_cost: typing.Optional[float] = pydantic.Field(default=None)
    """
    Cost attributed to LLM usage in USD
    """

    tts_cost: typing.Optional[float] = pydantic.Field(default=None)
    """
    Cost attributed to text-to-speech in USD
    """

    stt_cost: typing.Optional[float] = pydantic.Field(default=None)
    """
    Cost attributed to speech-to-text in USD
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
