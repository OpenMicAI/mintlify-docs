# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .advanced_settings_agent_personality import AdvancedSettingsAgentPersonality
from .advanced_settings_agent_response_length import AdvancedSettingsAgentResponseLength


class AdvancedSettings(UniversalBaseModel):
    agent_personality: typing.Optional[AdvancedSettingsAgentPersonality] = pydantic.Field(default=None)
    """
    Personality type for the agent
    """

    humanize_conversation: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to humanize the conversation
    """

    background_noise_reduction: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to reduce background noise
    """

    allow_interruptions: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to allow user interruptions
    """

    min_interruption_duration: typing.Optional[float] = pydantic.Field(default=None)
    """
    Minimum interruption duration in seconds (0.2-5, step 0.1)
    """

    background_sound: typing.Optional[str] = pydantic.Field(default=None)
    """
    Background sound to play
    """

    agent_response_length: typing.Optional[AdvancedSettingsAgentResponseLength] = pydantic.Field(default=None)
    """
    Preferred response length
    """

    short_pause: typing.Optional[float] = pydantic.Field(default=None)
    """
    Short pause duration in seconds (0.2-2, step 0.1)
    """

    long_pause: typing.Optional[float] = pydantic.Field(default=None)
    """
    Long pause duration in seconds (0.5-6, step 0.1)
    """

    filter_phrases: typing.Optional[str] = pydantic.Field(default=None)
    """
    Phrases to filter from speech
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
