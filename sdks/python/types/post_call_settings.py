# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .post_call_settings_success_evaluation_rubric_type import PostCallSettingsSuccessEvaluationRubricType


class PostCallSettings(UniversalBaseModel):
    summary_prompt: typing.Optional[str] = pydantic.Field(default=None)
    """
    Prompt for generating call summary
    """

    success_evaluation_prompt: typing.Optional[str] = pydantic.Field(default=None)
    """
    Prompt for evaluating call success
    """

    success_evaluation_rubric_type: typing.Optional[PostCallSettingsSuccessEvaluationRubricType] = pydantic.Field(
        default=None
    )
    """
    Type of success evaluation rubric
    """

    structured_extraction_prompt: typing.Optional[str] = pydantic.Field(default=None)
    """
    Prompt for structured data extraction
    """

    structured_extraction_json_schema: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(
        default=None
    )
    """
    JSON schema for structured extraction
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
