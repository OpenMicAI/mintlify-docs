/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface CallResponse {
    /** Type of call */
    call_type: CallResponse.CallType;
    /** Originating phone number */
    from_number: string;
    /** Destination phone number */
    to_number: string;
    /** Call direction */
    direction: CallResponse.Direction;
    /** Unique call identifier */
    call_id: string;
    /** Bot/agent identifier */
    agent_id: string;
    /** Current call status */
    call_status: CallResponse.CallStatus;
    /** Customer identifier */
    customer_id?: string;
    /** Telephony system identifiers */
    telephony_identifier?: Record<string, unknown>;
    /** Call start time (Unix timestamp in milliseconds) */
    start_timestamp?: number;
    /** Call end time (Unix timestamp in milliseconds) */
    end_timestamp?: number;
    /** Call duration in milliseconds */
    duration_ms?: number;
    /** Call transcript as array of [speaker, message] pairs */
    transcript?: string[][];
    /** URL to call recording */
    recording_url?: string;
    /** Latency metrics for different components */
    latency?: CallResponse.Latency;
    /** Post-call analysis results including summary and success metrics */
    call_analysis?: CallResponse.CallAnalysis;
    /** Detailed cost breakdown for the call */
    call_cost?: CallResponse.CallCost;
    /** Send dynamic variables in key value pairs to replace in the prompt. */
    dynamic_variables?: Record<string, unknown>;
}

export namespace CallResponse {
    /**
     * Type of call
     */
    export type CallType = "phonecall" | "webcall";
    export const CallType = {
        Phonecall: "phonecall",
        Webcall: "webcall",
    } as const;
    /**
     * Call direction
     */
    export type Direction = "inbound" | "outbound";
    export const Direction = {
        Inbound: "inbound",
        Outbound: "outbound",
    } as const;
    /**
     * Current call status
     */
    export type CallStatus = "registered" | "ongoing" | "ended" | "error";
    export const CallStatus = {
        Registered: "registered",
        Ongoing: "ongoing",
        Ended: "ended",
        Error: "error",
    } as const;

    /**
     * Latency metrics for different components
     */
    export interface Latency {
        /** Minimum end-to-end latency in seconds */
        e2e_min_latency?: number;
        /** Median end-to-end latency in seconds */
        e2e_median_latency?: number;
        /** 90th percentile end-to-end latency in seconds */
        e2e_p90_latency?: number;
        /** Minimum LLM processing latency in seconds */
        llm_min_latency?: number;
        /** Median LLM processing latency in seconds */
        llm_median_latency?: number;
        /** 90th percentile LLM processing latency in seconds */
        llm_p90_latency?: number;
        /** Minimum text-to-speech latency in seconds */
        tts_min_latency?: number;
        /** Median text-to-speech latency in seconds */
        tts_median_latency?: number;
        /** 90th percentile text-to-speech latency in seconds */
        tts_p90_latency?: number;
    }

    /**
     * Post-call analysis results including summary and success metrics
     */
    export interface CallAnalysis {
        /** AI-generated summary of the call */
        summary?: string;
        /** Whether the call was deemed successful */
        is_successful?: boolean;
        /** Success evaluation result (e.g., 'good', 'excellent', 'poor') */
        success_evaluation?: string;
        /** Structured data extracted from the call based on post-call settings */
        extracted_data?: Record<string, unknown>;
    }

    /**
     * Detailed cost breakdown for the call
     */
    export interface CallCost {
        /** Total cost of the call in USD */
        total_cost?: number;
        /** Cost attributed to LLM usage in USD */
        llm_cost?: number;
        /** Cost attributed to text-to-speech in USD */
        tts_cost?: number;
        /** Cost attributed to speech-to-text in USD */
        stt_cost?: number;
    }
}
